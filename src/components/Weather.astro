---
import Card from './Card.astro'
import { WEATHER_API_KEY, WEATHER_API_URL } from '../config.js'
import { isAfter, add } from 'date-fns'

const response = await fetch(
  `${WEATHER_API_URL}?lat=20.59&lon=-100.39&appid=${WEATHER_API_KEY}&units=metric`
)
const data = await response.json()

let cardGradientClasses = 'from-[#0075FF17] to-[#00C2FF] via-[#0088FFB8]'

const isDay = isAfter(new Date(), new Date(data.sys.sunrise * 1000))
const isNight = isAfter(new Date(), add(new Date(data.sys.sunset * 1000), { hours: 1 }))

if (isDay) cardGradientClasses = 'from-[#FFB800] to-[#FFD600] via-[#FFC200]'
if (isNight) cardGradientClasses = 'from-[#01162E] to-[#01426D] via-[#013155]'
---

<Card
  class={`${cardGradientClasses} md:order-4 lg:order-4 card-sm flex flex-col gap-2 bg-gradient-to-br text-white`}>
  <h1 class="text-lg sm:text-4xl font-bold">{data.main.temp}Â°C</h1>
  <div class="flex items-center gap-1">
    <span class="capitalize text-xs sm:text-base font-semibold">{data.weather[0].description}</span>
    <img
      class="w-6 h-6 sm:w-8 sm:h-8"
      src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}
      alt={data.weather[0].description}
    />
  </div>
  <span class="text-xs sm:text-base font-normal" id="current-time"></span>
  <span class="text-xs sm:text-base font-normal">{`${data.name}, ${data.sys.country}`}</span>
  <script>
    const time = document.getElementById('current-time')
    const DateTimeFormatter = new Intl.DateTimeFormat('en-US', {
      timeZone: 'America/Mexico_City',
      hour: '2-digit',
      minute: '2-digit',
      hour12: true,
    })

    setInterval(() => {
      time.textContent = DateTimeFormatter.format(new Date())
    }, 1000)
  </script>
</Card>
