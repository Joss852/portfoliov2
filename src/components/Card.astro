---
interface Card {
  direction: string
  title: string
  externalLink?: boolean
  socialIcon?: object
}

const { class: className, direction, title, externalLink, socialIcon } = Astro.props
---

<div
  class=`${className} relative rounded-3xl p-4 md:p-6 transition duration-150 ease-in-out active:scale-95 lg:hover:scale-105`>
  {
    socialIcon && (
      <div class="absolute flex items-center gap-2">
        <img src={socialIcon.src} alt={socialIcon.alt} class="w-5 h-5" />
        {title && (
          <h3 class="font-bold text-xl sm:text-xl capitalize">
            {title === 'dnd' ? 'Do Not Disturb' : title}
          </h3>
        )}
      </div>
    )
  }

  {
    externalLink && (
      <div class="absolute right-6 w-5 h-5 sm:w-6 sm:h-6">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-5 h-5 sm:w-6 sm:h-6">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"
          />
        </svg>
      </div>
    )
  }
  <div
    class=`h-full flex flex-col ${direction === 'center' ? 'justify-center text-center' : 'justify-end text-left'}`>
    <slot />
  </div>
</div>
<style>
  .card-sm {
    width: auto;
    height: var(--dinamic-height-mobile);
    max-width: 361.5px;
    max-height: 361.5px;

    @media (min-width: 768px) {
      min-width: 234.67px;
      height: var(--dinamic-height-tablet);
    }

    @media (min-width: 1024px) {
      width: auto;
      height: var(--dinamic-height-desktop);
      max-width: 297px;
      max-height: 297px;
    }
  }

  .card-md {
    grid-column: span 2 / span 2;
    width: auto;
    height: var(--dinamic-height-mobile);
    max-width: 735px;
    max-height: 361.5px;

    @media (min-width: 768px) {
      width: auto;
      height: auto;
    }
  }

  .card-md-vertical {
    grid-row: span 2 / span 2;
    width: auto;
    height: 100%;

    @media (min-width: 768px) {
      grid-row: span 1 / span 1;
    }

    @media (min-width: 1024px) {
      grid-row: span 2 / span 2;
    }
  }
</style>
